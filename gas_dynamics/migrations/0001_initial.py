# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-30 14:00
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import gas_dynamics.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MainDataPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=50)),
                ('pi_c', models.FloatField()),
                ('mass_rate', models.FloatField()),
                ('T_stag_1', models.FloatField()),
                ('p_stag_1', models.FloatField()),
                ('eta_ad_min', models.FloatField()),
                ('stage_number', models.IntegerField(default=1)),
                ('precision', models.FloatField(default=0.03)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeanRadiusDataPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=50)),
                ('u_out_1', gas_dynamics.models.ListField()),
                ('d_rel_1', gas_dynamics.models.ListField()),
                ('H_t_rel_first', gas_dynamics.models.ListField()),
                ('H_t_rel_last', gas_dynamics.models.ListField()),
                ('H_t_rel_max', gas_dynamics.models.ListField()),
                ('H_t_rel_max_coord', gas_dynamics.models.ListField()),
                ('eta_ad_first', gas_dynamics.models.ListField()),
                ('eta_ad_last', gas_dynamics.models.ListField()),
                ('eta_ad_max', gas_dynamics.models.ListField()),
                ('eta_ad_max_coord', gas_dynamics.models.ListField()),
                ('c_a_rel_first', gas_dynamics.models.ListField()),
                ('c_a_rel_last', gas_dynamics.models.ListField()),
                ('reactivity_first', gas_dynamics.models.ListField()),
                ('reactivity_last', gas_dynamics.models.ListField()),
                ('inlet_alpha', gas_dynamics.models.ListField(blank=True, default=[90])),
                ('flow_section_type', gas_dynamics.models.ListField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfilingDataPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=50)),
                ('rotor_velocity_law', gas_dynamics.models.ListField()),
                ('stator_velocity_law', gas_dynamics.models.ListField()),
                ('rotor_blade_profile', gas_dynamics.models.ListField()),
                ('stator_blade_profile', gas_dynamics.models.ListField()),
                ('rotor_blade_elongation', gas_dynamics.models.ListField()),
                ('stator_blade_elongation', gas_dynamics.models.ListField()),
                ('rotor_lattice_density', gas_dynamics.models.ListField()),
                ('stator_lattice_density', gas_dynamics.models.ListField()),
                ('rotor_blade_windage', gas_dynamics.models.ListField()),
                ('stator_blade_windage', gas_dynamics.models.ListField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('start_date', models.DateTimeField(default=datetime.datetime(2016, 7, 30, 14, 0, 2, 687145, tzinfo=utc), verbose_name='date started')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CalculationResult',
            fields=[
                ('name', models.FilePathField(path='/home/artem/Documents/PyCharm/compressor_site/media/gas_dynamics', recursive=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='gas_dynamics.Task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gas_dynamics.Project'),
        ),
        migrations.AddField(
            model_name='profilingdatapart',
            name='task',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gas_dynamics.Task'),
        ),
        migrations.AddField(
            model_name='meanradiusdatapart',
            name='task',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gas_dynamics.Task'),
        ),
        migrations.AddField(
            model_name='maindatapart',
            name='task',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gas_dynamics.Task'),
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together=set([('project', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together=set([('user', 'name')]),
        ),
    ]
